# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

name: Publish charm

on:
  workflow_call:
    inputs:
      channel:
        required: true
        type: string
        description: 'Origin Channel'
      working-directory:
        type: string
        description: The working directory for jobs
        default: "./"

jobs:
  branch-up-to-date-check-enabled:
    runs-on: ubuntu-22.04
    steps:
      - run: |
          echo ${{ github.event.repository.name }}
          echo ${{ github.event.repository.owner.login }}
      - uses: octokit/request-action@v2.x
        id: get-branch-protection
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        with:
          route: GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks
          repo: ${{ github.event.repository.name }}
          owner: ${{ github.event.repository.owner.login }}
          branch: main
      - run: |
          echo ${{ steps.get-branch-protection.outputs.data }}
          if [ ${{ fromJson(steps.get-branch-protection.outputs.data).strict }} != "true" ]; then
            echo "::error::Strict checks are not enabled for this repository"
            exit 1
          fi
  get-runner-image:
    name: Get runner image
    uses: ./.github/workflows/get_runner_image.yaml
    with:
      working-directory: ${{ inputs.working-directory }}
  release-charm-libs:
    name: Release charm libs
    needs: [ branch-up-to-date-check-enabled ]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - if: inputs.working-directory != './'
        name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ${{inputs.working-directory}}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - uses: canonical/charming-actions/release-libraries@2.3.0
        name: Release libs
        with:
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
  get-pr-number:
    name: Get PR triggering the change
    needs: [ branch-up-to-date-check-enabled ]
    runs-on: ubuntu-22.04
    outputs:
      pr-number: ${{ fromJson(steps.get-issue-number.outputs.data)[0].number }}
    steps:
      - uses: octokit/request-action@v2.x
        id: get-issue-number
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        with:
          route: GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls
          repo: context.repo.repo
          owner: context.repo.owner
          commit_sha: context.sha
  get-images:
    name: Get images
    runs-on: ubuntu-22.04
    outputs:
      images: ${{ env.IMAGES }}
    steps:
      - uses: actions/checkout@v3
      - name: Get images
        working-directory: ${{ inputs.working-directory }}
        run: |
          lines=$(find . -type f -name rockcraft.yaml | wc -l)
          if [ $lines -ne 0 ]; then
            IMAGES=$(find . -type f -name rockcraft.yaml | xargs -l yq '.name' | jq -Rsc '. / "\n" - [""]')
          else
            IMAGES=$(ls *.Dockerfile 2> /dev/null | sed s/\.Dockerfile// |  jq -Rsc '. / "\n" - [""]')
          fi
          echo "IMAGES=$IMAGES" >> $GITHUB_ENV
  publish-images:
    name: Publish images to charmhub
    runs-on: ${{ needs.get-runner-image.outputs.runs-on }}
    needs: [ get-images, get-pr-number, get-runner-image]
    if: ${{ needs.get-images.outputs.images != '[]' }}
    strategy:
      matrix:
        image: ${{ fromJSON(needs.get-images.outputs.images) }}
    steps:
      - uses: actions/checkout@v3
      - if: inputs.working-directory != './'
        name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ${{inputs.working-directory}}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - name: Install charmcraft
        run: sudo snap install charmcraft --classic
      - name: Download docker artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          if_no_artifact_found: warn
          name: ${image_name}.tar
          pr: ${{ needs.get-issue-number.outputs.pr-number }}
          workflow: build_images.yaml
          workflow_conclusion: success
      - name: Download rock artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          if_no_artifact_found: warn
          name: ${image_name}.tar
          pr: ${{ needs.get-issue-number.outputs.pr-number }}
          workflow: build_rocks.yaml
          workflow_conclusion: success
      - name: Publish image
        env:
          CHARMCRAFT_AUTH:  ${{ secrets.CHARMHUB_TOKEN }}
        run: |
          imageFile=${image_name}/${image_name}.tar
          charmName=$(yq '.name' metadata.yaml)
          charmcraft upload-resource $charmName ${{ matrix.image }}-image --filepath=$imageFile --verbosity=trace
  publish-charm:
    name: Publish charm to ${{ inputs.channel }}
    runs-on: ${{ needs.get-runner-image.outputs.runs-on }}
    needs: [get-pr-number, get-runner-image, publish-images]
    if: ${{ !failure() }}
    steps:
      - uses: actions/checkout@v3
      - if: inputs.working-directory != './'
        name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ${{inputs.working-directory}}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - name: Get charm name
        id: get-charm-name
        run: echo "charm_name=$(yq '.name' metadata.yaml)" >> $GITHUB_OUTPUT
      - name: Download charm artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ steps.get-charm-name.outputs.charm_name }}.tar
          pr: ${{ needs.get-issue-number.outputs.pr-number }}
          workflow: build_rintegration_test.yaml
          workflow_conclusion: success
      - name: Upload charm to charmhub
        uses: canonical/charming-actions/upload-charm@2.3.0
        with:
          built-charm-path: ${{ steps.get-charm-name.outputs.charm_name }}.tar
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          channel: ${{ inputs.channel }}
          upload-image: false
