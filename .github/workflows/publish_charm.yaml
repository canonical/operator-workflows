# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

name: Publish charm

on:
  workflow_call:
    inputs:
      channel:
        required: true
        type: string
        description: 'Origin Channel'
      images:
        type: string
        description: 'Docker images'
      working-directory:
        type: string
        description: The working directory for jobs
        default: "./"

jobs:
  get-runner-image:
    name: Get runner image
    uses: ./.github/workflows/get_runner_image.yaml
    with:
      working-directory: ${{ inputs.working-directory }}
  release-charm-libs:
    name: Release charm libs
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - if: inputs.working-directory != './'
        name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ${{inputs.working-directory}}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - uses: canonical/charming-actions/release-libraries@2.3.0
        name: Release libs
        with:
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
  publish-images:
    name: Publish images to charmhub
    runs-on: ${{ needs.get-runner-image.outputs.runs-on }}
    needs: get-runner-image
    if: ${{ inputs.images != '[]' }}
    strategy:
      matrix:
        image: ${{ fromJSON(inputs.images) }}
    steps:
      - uses: actions/checkout@v3
      - if: inputs.working-directory != './'
        name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ${{inputs.working-directory}}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - name: Install charmcraft
        run: sudo snap install charmcraft --classic
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${image_name}.tar
      - name: Publish image
        env:
          CHARMCRAFT_AUTH:  ${{ secrets.CHARMHUB_TOKEN }}
        run: |
          imageFile=${image_name}/${image_name}.tar
          charmName=$(yq '.name' metadata.yaml)
          charmcraft upload-resource $charmName ${{ matrix.image }}-image --filepath=$imageFile --verbosity=trace
  publish-charm:
    name: Publish charm to ${{ inputs.channel }}
    runs-on: ${{ needs.get-runner-image.outputs.runs-on }}
    needs: [get-runner-image, publish-images]
    if: ${{ !failure() }}
    steps:
      - uses: actions/checkout@v3
      - if: inputs.working-directory != './'
        name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ${{inputs.working-directory}}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - name: Get charm name
        id: get-charm-name
        run: echo "charm_name=$(yq '.name' metadata.yaml)" >> $GITHUB_OUTPUT
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.get-charm-name.outputs.charm_name }}.tar
      - name: Upload charm to charmhub
        uses: canonical/charming-actions/upload-charm@2.3.0
        with:
          built-charm-path: ${{ steps.get-charm-name.outputs.charm_name }}.tar
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          channel: ${{ inputs.channel }}
          upload-image: false
