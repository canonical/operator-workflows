# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

name: Publish charm

on:
  workflow_call:
    inputs:
      channel:
        required: true
        type: string
        description: 'Origin Channel'
      images:
        type: string
        description: 'Docker images'
      working-directory:
        type: string
        description: The working directory for jobs
        default: "./"

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  get-runner-image:
    name: Get runner image
    uses: ./.github/workflows/get_runner_image.yaml
    with:
      working-directory: ${{ inputs.working-directory }}
  publish-images:
    name: Publish images to charmhub
    runs-on: ${{ needs.get-runner-image.outputs.runs-on }}
    needs: get-runner-image
    if: ${{ inputs.images != '[]' }}
    strategy:
      matrix:
        image: ${{ fromJSON(inputs.images) }}
    steps:
      - uses: actions/checkout@v3
      - if: inputs.working-directory != './'
        name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ${{inputs.working-directory}}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - name: Install charmcraft
        run: sudo snap install charmcraft --classic
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish image
        env:
          CHARMCRAFT_AUTH:  ${{ secrets.CHARMHUB_TOKEN }}
        run: |
          image=${{ env.REGISTRY }}/${{ env.OWNER }}/${{ matrix.image }}:${{ github.run_id }}
          charmName=$(yq '.name' metadata.yaml)
          docker pull $image
          imageId=$(docker images $image --format "{{.ID}}")
          charmcraft upload-resource $charmName ${{ matrix.image }}-image --image=$imageId --verbosity=trace
  lookup-external-images:
    name: Lookup External Images
    runs-on: ubuntu:latest
    outputs:
      images: ${{ env.IMAGES }}
    steps:
      - uses: actions/checkout@v3
      - if: inputs.working-directory != './'
        name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ${{inputs.working-directory}}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - name: Extract External Images
        run: |
          IMAGES=$(yq -c '.resources | to_entries | map(select(.value.type == "oci-image" and .value."upstream-source")) | map(.key)' metadata.yaml)
          echo "External Images: $IMAGES"
          echo "IMAGES=$IMAGES" >> $GITHUB_ENV
  publish-external-images:
    name: Push Externam Images to Charmhub
    runs-on: ubuntu:latest
    needs: [ lookup-external-images ]
    if: ${{ needs.lookup-external-images.outputs.images != '[]' }}
    strategy:
      matrix:
        image: ${{ fromJSON(needs.lookup-external-images.outputs.images) }}
    steps:
      - uses: actions/checkout@v3
      - if: inputs.working-directory != './'
        name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ${{inputs.working-directory}}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - name: Publish image
        env:
          CHARMCRAFT_AUTH:  ${{ secrets.CHARMHUB_TOKEN }}
        run: |
          image=${{ matrix.image }}
          charmName=$(yq '.name' metadata.yaml)
          docker pull $image
          imageId=$(docker images $image --format "{{.ID}}")
          charmcraft upload-resource $charmName ${{ matrix.image }}-image --image=$imageId --verbosity=trace
  publish-charm:
    name: Publish charm to ${{ inputs.channel }}
    runs-on: ${{ needs.get-runner-image.outputs.runs-on }}
    needs: [get-runner-image, publish-images]
    if: ${{ !failure() }}
    steps:
      - uses: actions/checkout@v3
      - if: inputs.working-directory != './'
        name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ${{inputs.working-directory}}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - name: Upload charm to charmhub
        uses: canonical/charming-actions/upload-charm@2.2.1
        with:
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          channel: ${{ inputs.channel }}
          upload-image: false
