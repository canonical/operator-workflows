# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: Publish charm

on:
  workflow_call:
    inputs:
      channel:
        type: string
        required: false
        description: 'Destination Channel'
      identifier:
        type: string
        description: >-
          The matching integration test workflow job identifier, see identifier in the integration test workflow input.
        default: ""
      resource-mapping:
        type: string
        description: >-
          Associate rock image names with corresponding resource names specified in the charm metadata. 
          If not defined, the suffix '-image' to the rock image name will be append. 
          For instance, a rock image named 'my-rock' will be uploaded as the charm OCI resource named 'my-rock-image'.
        default: "{}"
      working-directory:
        type: string
        description: The working directory for jobs
        default: "./"
      tag-prefix:
        type: string
        required: false
        description: |
          Tag prefix, useful when bundling multiple charms in the same repo.
      charmcraft-channel:
        description: Charmcraft channel to use for publishing the charm and resources
        type: string
        default: latest/stable
      integration-test-workflow-file:
        description: The filename of the integration test workflow file.
        type: string
        default: "integration_test.yaml"
      workflow-run-id:
        description: >-
          Use the newly built charms and images in this workflow run as the new version to upload. 
          If these are not provided, the system will default to using charms and rocks from the most 
          recent successful integration test that matches the git tree ID.
        type: string
        default: ""
env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  select-channel:
    runs-on: ubuntu-latest
    outputs:
      destination-channel: ${{ steps.select-channel.outputs.name }}
    steps:
      - name: Select charmhub channel
        uses: canonical/charming-actions/channel@2.5.0-rc
        id: select-channel
  publish-charm:
    name: Publish charm to ${{ inputs.channel || needs.select-channel.outputs.destination-channel }}
    runs-on: ubuntu-latest
    needs: [select-channel]
    outputs:
      charm-directory: ${{ steps.publish.outputs.charm-directory }}
    steps:
      - uses: actions/checkout@v4.1.7
      - run: sudo snap install charmcraft --channel ${{ inputs.charmcraft-channel }} --classic
        # required to use skopeo embedded within rockcraft - otherwise a docker error
        # "io: read/write on closed pipe" will happen
      - run: sudo snap install rockcraft --classic
      - uses: canonical/operator-workflows/internal/publish@main
        id: publish
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          charmhub-token: ${{ secrets.CHARMHUB_TOKEN }}
          identifier: ${{ inputs.identifier }}
          resource-mapping: ${{ inputs.resource-mapping }}
          working-directory: ${{ inputs.working-directory }}
          workflow-file: ${{ inputs.integration-test-workflow-file }}
          workflow-run-id: ${{ inputs.workflow-run-id }}
      - name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ./${{ steps.publish.outputs.charm-directory }}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
          ls -lah
      - name: Upload charm to charmhub
        uses: canonical/charming-actions/upload-charm@2.5.0-rc
        with:
          built-charm-path: ${{ steps.publish.outputs.charms }}
          charmcraft-channel: ${{ inputs.charmcraft-channel }}
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          channel: ${{ inputs.channel || needs.select-channel.outputs.destination-channel }}
          tag-prefix: ${{ inputs.tag-prefix }}
          upload-image: false
  draft-publish-docs:
    name: Draft publish docs
    runs-on: ubuntu-22.04
    needs: [publish-charm]
    defaults:
      run:
        working-directory: ${{ needs.publish-charm.outputs.charm-directory }}
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Search for docs folder
        id: docs-exist
        run: echo "docs_exist=$([[ -d docs ]] && echo 'True' || echo 'False')" >> $GITHUB_OUTPUT
      - name: Publish documentation
        if: steps.docs-exist.outputs.docs_exist == 'True'
        uses: canonical/discourse-gatekeeper@stable
        with:
          discourse_host: discourse.charmhub.io
          discourse_api_username: ${{ secrets.DISCOURSE_API_USERNAME }}
          discourse_api_key: ${{ secrets.DISCOURSE_API_KEY }}
          dry_run: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          charm_dir: ${{ needs.publish-charm.outputs.charm-directory }}
  release-charm-libs:
    name: Release charm libs
    runs-on: ubuntu-22.04
    needs: [ publish-charm ]
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Change directory
        run: |
          TEMP_DIR=$(mktemp -d)
          cp -rp ./${{ needs.publish-charm.outputs.charm-directory }}/. $TEMP_DIR
          rm -rf .* * || :
          cp -rp $TEMP_DIR/. .
          rm -rf $TEMP_DIR
      - uses: canonical/charming-actions/release-libraries@2.5.0-rc
        name: Release libs
        with:
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
