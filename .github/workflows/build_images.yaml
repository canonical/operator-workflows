# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

name: Build images

on:
  workflow_call:
    inputs:
      build-args:
        description: |
          List of build args to pass to the build image job.
        type: string
        default: ""
      runs-on:
        type: string
        description: Image runner for building the images
        default: ubuntu-22.04
      trivy-image-config:
        type: string
        description: Trivy YAML configuration for image testing that is checked in as part of the repo
      working-directory:
        type: string
        description: The working directory for jobs
        default: "./"
    outputs:
      images:
        description: List of images built
        value: ${{ jobs.get-images.outputs.images }}

jobs:
  get-images:
    name: Get images
    runs-on: ubuntu-22.04
    outputs:
      images: ${{ env.DOCKER_IMAGES }}
    steps:
      - uses: actions/checkout@v3
      - name: Get dockerfiles
        working-directory: ${{ inputs.working-directory }}
        run: echo "DOCKER_IMAGES=$(ls *.Dockerfile 2> /dev/null | sed s/\.Dockerfile// |  jq -Rsc '. / "\n" - [""]')" >> $GITHUB_ENV
  build-images:
    name: Build image
    runs-on: ${{ inputs.runs-on }}
    needs: [get-images]
    if: ${{ needs.get-images.outputs.images != '[]' }}
    strategy:
      matrix:
        image: ${{ fromJSON(needs.get-images.outputs.images) }}
    steps:
      - uses: actions/checkout@v3
      # GitHub doesn't currently support pushing images in the Docker registry when opening a PR from a fork
      # so an artifact is published instead
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build image as tarball
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.working-directory }}/${{ matrix.image }}.Dockerfile
          tags: ${{ matrix.image }}:latest
          outputs: type=docker,dest=/tmp/${{ matrix.image }}.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.image }}
          path: /tmp/${{ matrix.image }}.tar
      # Trivy requires an OCI type tar to run the scan
      - name: Build image as tarball
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.working-directory }}/${{ matrix.image }}.Dockerfile
          outputs: type=oci,dest=${{ matrix.image }}.tar
      - name: Get tar image name
        run: |
          echo "IMAGE_TAR=${{ matrix.image }}.tar" >> $GITHUB_ENV
      - name: Run Github Trivy Image Action
        uses: aquasecurity/trivy-action@0.10.0
        with:
          input: ${{ env.IMAGE_TAR }}
          trivy-config: ${{ inputs.trivy-image-config }}
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
