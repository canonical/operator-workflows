# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: Promote charm

on:
  workflow_call:
    inputs:
      base-architecture:
        type: choice
        description: Charm base architecture
        options:
          - amd64
          - arm64
      base-channel:
        type: string
        description: Charm base channel
        default: "22.04"
      base-name:
        type: string
        description: Charm base name
        default: ubuntu
      charm-directory:
        type: string
        description: The directory for the charm under the working-directory
        default: "."
      destination-channel:
        type: string
        description: 'Destination Channel'
      doc-automation-disabled:
        type: boolean
        description: 'Whether to disable the documentation automation'
        default: true
      origin-channel:
        type: string
        description: 'Origin Channel'
      working-directory:
        type: string
        description: The working directory for jobs
        default: "./"

jobs:
  validate-channels:
    name: Validate channels
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.7
      - run: |
          set -e
          origin_track=$(echo ${{ inputs.origin-channel }} | cut -d "/" -f 1)
          destination_track=$(echo ${{ inputs.destination-channel }} | cut -d "/" -f 1)
          if [ $origin_track != $destination_track ]; then
            echo "::error::Destination track $destination_track does not match origin track $origin_track"
            exit 1
          fi
  validate-inputs:
    name: Validate inputs
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.7
      - run: |
          set -e

          CHARMCRAFT_YAML_PATH=${{ inputs.working-directory }}/${{ inputs.charm-directory }}/charmcraft.yaml
          if [ ! -f $CHARMCRAFT_YAML_PATH ]; then
              echo "charmcraft.yaml not found in $CHARMCRAFT_YAML_PATH"
              exit 1
          fi

          # Validate input charm base configurations exists in charmcraft.yaml
          target_base_arch=${{ inputs.base-architecture }}
          target_base_channel=${{ inputs.base-channel }}
          target_base_name=${{ inputs.base-name }}

          readarray bases < <(yq --output-format json --indent=0 '.bases[]' $CHARMCRAFT_YAML_PATH)
          for base in "${bases[@]}"; do
              # Check optional run-on first, since build-on is used as default otherwise.
              if [[ $(echo $base | yq 'has("run-on")') == "true" ]]; then
                  readarray run_ons < <(echo $base | yq --output-format json --indent=0 '.run-on[]')
                  for run_on in $run_ons; do
                      channel=$(echo $run_on | yq -r '.channel')
                      name=$(echo $run_on | yq -r '.name')
                      for arch in $(echo $run_on | yq -r '.architectures[]'); do
                          if [[ "$arch" == "$target_base_arch" ]] && \
                              [[ "$channel" == "$target_base_channel" ]] && \
                              [[ "$name" == "$target_base_name" ]]; then
                              exit 0
                          fi
                      done
                  done
              fi

              readarray build_ons < <(echo $base | yq --output-format json --indent=0 '.build-on[]')
              for build_on in $build_ons; do
                  channel=$(echo $build_on | yq -r '.channel')
                  name=$(echo $build_on | yq -r '.name')
                  for arch in $(echo $build_on | yq -r '.architectures[]'); do
                      if [[ "$arch" == "$target_base_arch" ]] && \
                      [[ "$channel" == "$target_base_channel" ]] && \
                      [[ "$name" == "$target_base_name" ]]; then
                          exit 0
                      fi
                  done
              done
          done

          echo "No matching base found: $target_base_arch $target_base_channel $target_base_name"
          exit 1
  promote-charm:
    name: Promote charm
    runs-on: ubuntu-latest
    needs: [validate-channels, validate-inputs]
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Release charm to channel
        uses: canonical/charming-actions/release-charm@2.6.2
        with:
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          charm-path: ${{ inputs.working-directory }}/${{ inputs.charm-directory }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          origin-channel: ${{ inputs.origin-channel }}
          destination-channel: ${{ inputs.destination-channel }}
          base-name: ${{ inputs.base-name }}
          base-channel: ${{ inputs.base-channel }}
          base-architecture: ${{ inputs.base-architecture }}
  draft-publish-docs:
    name: Draft publish docs
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}/${{ inputs.charm-directory }}
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Search for docs folder
        id: docs-exist
        run: echo "docs_exist=$([[ -d docs ]] && echo 'True' || echo 'False')" >> $GITHUB_OUTPUT
      - name: Publish documentation
        if: steps.docs-exist.outputs.docs_exist == 'True'
        uses: canonical/discourse-gatekeeper@stable
        with:
          discourse_host: discourse.charmhub.io
          discourse_api_username: ${{ secrets.DISCOURSE_API_USERNAME }}
          discourse_api_key: ${{ secrets.DISCOURSE_API_KEY }}
          dry_run: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          charm_dir:  ${{ inputs.working-directory }}/${{ inputs.charm-directory }}
  publish-docs:
    if: ${{ github.event.inputs.destination-channel }} == 'latest/stable'
    name: Publish docs
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}/${{ inputs.charm-directory }}
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Search for docs folder
        id: docs-exist
        run: echo "docs_exist=$([[ -d docs ]] && echo 'True' || echo 'False')" >> $GITHUB_OUTPUT
      - name: Publish documentation
        if: steps.docs-exist.outputs.docs_exist == 'True'
        uses: canonical/discourse-gatekeeper@stable
        id: publishDocumentation
        with:
          discourse_host: discourse.charmhub.io
          discourse_api_username: ${{ secrets.DISCOURSE_API_USERNAME }}
          discourse_api_key: ${{ secrets.DISCOURSE_API_KEY }}
          dry_run: ${{ inputs.doc-automation-disabled }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          charm_dir:  ${{ inputs.working-directory }}/${{ inputs.charm-directory }}
      - name: Show index page
        if: steps.docs-exist.outputs.docs_exist == 'True'
        run: echo '${{ steps.publishDocumentation.outputs.index_url }}'
